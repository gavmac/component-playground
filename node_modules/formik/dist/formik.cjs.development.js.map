{"version":3,"file":"formik.cjs.development.js","sources":["../src/utils.ts","../src/FormikContext.tsx","../src/Formik.tsx","../src/Field.tsx","../src/Form.tsx","../src/withFormik.tsx","../src/connect.tsx","../src/FieldArray.tsx","../src/ErrorMessage.tsx","../src/FastField.tsx"],"sourcesContent":["import clone from 'lodash/clone';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n// Assertions\n\n/** @private is the value an empty array? */\nexport const isEmptyArray = (value?: any) =>\n  Array.isArray(value) && value.length === 0;\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): obj is Object =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/** @private is the given object/value a type of synthetic event? */\nexport const isInputEvent = (value: any): value is React.SyntheticEvent<any> =>\n  value && isObject(value) && isObject(value.target);\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via it's path. If the value at `path`\n * has changed, return a shallow copy of obj with `value` set at `path`.\n * If `value` has not changed, return the original `obj`.\n *\n * Existing objects / arrays along `path` are also shallow copied. Sibling\n * objects along path retain the same internal js reference. Since new\n * objects / arrays are only created along `path`, we can test if anything\n * changed in a nested structure by comparing the object's reference in\n * the old and new object, similar to how russian doll cache invalidation\n * works.\n *\n * In earlier versions of this function, which used cloneDeep, there were\n * issues whereby settings a nested value would mutate the parent\n * instead of creating a new object. `clone` avoids that bug making a\n * shallow copy of the objects along the update path\n * so no object is mutated in place.\n *\n * Before changing this function, please read through the following\n * discussions.\n *\n * @see https://github.com/developit/linkstate\n * @see https://github.com/jaredpalmer/formik/pull/123\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = clone(obj); // this keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport invariant from 'tiny-warning';\n\nexport const FormikContext = React.createContext<FormikContextType<any>>(\n  undefined as any\n);\nexport const FormikProvider = FormikContext.Provider;\nexport const FormikConsumer = FormikContext.Consumer;\n\nexport function useFormikContext<Values>() {\n  const formik = React.useContext<FormikContextType<Values>>(FormikContext);\n\n  invariant(\n    !!formik,\n    `Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.`\n  );\n\n  return formik;\n}\n","import * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash/isPlainObject';\nimport {\n  FormikConfig,\n  FormikErrors,\n  FormikState,\n  FormikTouched,\n  FormikValues,\n  FormikProps,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n} from './types';\nimport {\n  isFunction,\n  isString,\n  setIn,\n  isEmptyChildren,\n  isPromise,\n  setNestedObjectValues,\n  getActiveElement,\n  getIn,\n  isObject,\n} from './utils';\nimport { FormikProvider } from './FormikContext';\nimport invariant from 'tiny-warning';\nimport { LowPriority, unstable_runWithPriority } from 'scheduler';\n\ntype FormikMessage<Values> =\n  | { type: 'SUBMIT_ATTEMPT' }\n  | { type: 'SUBMIT_FAILURE' }\n  | { type: 'SUBMIT_SUCCESS' }\n  | { type: 'SET_ISVALIDATING'; payload: boolean }\n  | { type: 'SET_ISSUBMITTING'; payload: boolean }\n  | { type: 'SET_VALUES'; payload: Values }\n  | { type: 'SET_FIELD_VALUE'; payload: { field: string; value?: any } }\n  | { type: 'SET_FIELD_TOUCHED'; payload: { field: string; value?: boolean } }\n  | { type: 'SET_FIELD_ERROR'; payload: { field: string; value?: string } }\n  | { type: 'SET_TOUCHED'; payload: FormikTouched<Values> }\n  | { type: 'SET_ERRORS'; payload: FormikErrors<Values> }\n  | { type: 'SET_STATUS'; payload: any }\n  | {\n      type: 'SET_FORMIK_STATE';\n      payload: (s: FormikState<Values>) => FormikState<Values>;\n    }\n  | {\n      type: 'RESET_FORM';\n      payload: FormikState<Values>;\n    };\n\n// State reducer\nfunction formikReducer<Values>(\n  state: FormikState<Values>,\n  msg: FormikMessage<Values>\n) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return { ...state, values: msg.payload };\n    case 'SET_TOUCHED':\n      return { ...state, touched: msg.payload };\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return { ...state, errors: msg.payload };\n    case 'SET_STATUS':\n      return { ...state, status: msg.payload };\n    case 'SET_ISSUBMITTING':\n      return { ...state, isSubmitting: msg.payload };\n    case 'SET_ISVALIDATING':\n      return { ...state, isValidating: msg.payload };\n    case 'SET_FIELD_VALUE':\n      return {\n        ...state,\n        values: setIn(state.values, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_TOUCHED':\n      return {\n        ...state,\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_ERROR':\n      return {\n        ...state,\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value),\n      };\n    case 'RESET_FORM':\n      return { ...state, ...msg.payload };\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n    case 'SUBMIT_ATTEMPT':\n      return {\n        ...state,\n        touched: setNestedObjectValues<FormikTouched<Values>>(\n          state.values,\n          true\n        ),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1,\n      };\n    case 'SUBMIT_FAILURE':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    case 'SUBMIT_SUCCESS':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n}\n\n// Initial empty states // objects\nconst emptyErrors: FormikErrors<unknown> = {};\nconst emptyTouched: FormikTouched<unknown> = {};\n\n// This is an object that contains a map of all registered fields\n// and their validate functions\ninterface FieldRegistry {\n  [field: string]: {\n    validate: (value: any) => string | Promise<string> | undefined;\n  };\n}\n\nexport function useFormik<Values extends FormikValues = FormikValues>({\n  validateOnChange = true,\n  validateOnBlur = true,\n  validateOnMount = false,\n  isInitialValid,\n  enableReinitialize = false,\n  onSubmit,\n  ...rest\n}: FormikConfig<Values>) {\n  const props = {\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    onSubmit,\n    ...rest,\n  };\n  const initialValues = React.useRef(props.initialValues);\n  const initialErrors = React.useRef(props.initialErrors || emptyErrors);\n  const initialTouched = React.useRef(props.initialTouched || emptyTouched);\n  const initialStatus = React.useRef(props.initialStatus);\n  const isMounted = React.useRef<boolean>(false);\n  const fieldRegistry = React.useRef<FieldRegistry>({});\n  React.useEffect(() => {\n    if (__DEV__) {\n      invariant(\n        typeof isInitialValid === 'undefined',\n        'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.'\n      );\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  React.useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<FormikState<Values>, FormikMessage<Values>>\n  >(formikReducer, {\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0,\n  });\n\n  const runValidateHandler = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      return new Promise((resolve, reject) => {\n        const maybePromisedErrors = (props.validate as any)(values, field);\n        if (maybePromisedErrors == null) {\n          // use loose null check here on purpose\n          resolve(emptyErrors);\n        } else if (isPromise(maybePromisedErrors)) {\n          (maybePromisedErrors as Promise<any>).then(\n            errors => {\n              resolve(errors || emptyErrors);\n            },\n            actualException => {\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validate />`,\n                  actualException\n                );\n              }\n\n              reject(actualException);\n            }\n          );\n        } else {\n          resolve(maybePromisedErrors);\n        }\n      });\n    },\n    [props.validate]\n  );\n\n  /**\n   * Run validation against a Yup schema and optionally run a function if successful\n   */\n  const runValidationSchema = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      const validationSchema = props.validationSchema;\n      const schema = isFunction(validationSchema)\n        ? validationSchema(field)\n        : validationSchema;\n      const promise =\n        field && schema.validateAt\n          ? schema.validateAt(field, values)\n          : validateYupSchema(values, schema);\n      return new Promise((resolve, reject) => {\n        promise.then(\n          () => {\n            resolve(emptyErrors);\n          },\n          (err: any) => {\n            // Yup will throw a validation error if validation fails. We catch those and\n            // resolve them into Formik errors. We can sniff if something is a Yup error\n            // by checking error.name.\n            // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n            if (err.name === 'ValidationError') {\n              resolve(yupToFormErrors(err));\n            } else {\n              // We throw any other errors\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validationSchema />`,\n                  err\n                );\n              }\n\n              reject(err);\n            }\n          }\n        );\n      });\n    },\n    [props.validationSchema]\n  );\n\n  const runSingleFieldLevelValidation = React.useCallback(\n    (field: string, value: void | string): Promise<string> => {\n      return new Promise(resolve =>\n        resolve(fieldRegistry.current[field].validate(value))\n      );\n    },\n    []\n  );\n\n  const runFieldLevelValidations = React.useCallback(\n    (values: Values): Promise<FormikErrors<Values>> => {\n      const fieldKeysWithValidation: string[] = Object.keys(\n        fieldRegistry.current\n      ).filter(f => isFunction(fieldRegistry.current[f].validate));\n\n      // Construct an array with all of the field validation functions\n      const fieldValidations: Promise<string>[] =\n        fieldKeysWithValidation.length > 0\n          ? fieldKeysWithValidation.map(f =>\n              runSingleFieldLevelValidation(f, getIn(values, f))\n            )\n          : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n      return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\n        fieldErrorsList.reduce((prev, curr, index) => {\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n            return prev;\n          }\n          if (curr) {\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\n          }\n          return prev;\n        }, {})\n      );\n    },\n    [runSingleFieldLevelValidation]\n  );\n\n  // Run all validations and return the result\n  const runAllValidations = React.useCallback(\n    (values: Values) => {\n      return Promise.all([\n        runFieldLevelValidations(values),\n        props.validationSchema ? runValidationSchema(values) : {},\n        props.validate ? runValidateHandler(values) : {},\n      ]).then(([fieldErrors, schemaErrors, validateErrors]) => {\n        const combinedErrors = deepmerge.all<FormikErrors<Values>>(\n          [fieldErrors, schemaErrors, validateErrors],\n          { arrayMerge }\n        );\n        return combinedErrors;\n      });\n    },\n    [\n      props.validate,\n      props.validationSchema,\n      runFieldLevelValidations,\n      runValidateHandler,\n      runValidationSchema,\n    ]\n  );\n\n  // Run validations and dispatching the result as low-priority via rAF.\n  //\n  // The thinking is that validation as a result of onChange and onBlur\n  // should never block user input. Note: This method should never be called\n  // during the submission phase because validation prior to submission\n  // is actaully high-priority since we absolutely need to guarantee the\n  // form is valid before executing props.onSubmit.\n  const validateFormWithLowPriority = useEventCallback(\n    (values: Values = state.values) => {\n      return unstable_runWithPriority(LowPriority, () => {\n        return runAllValidations(values)\n        .then(combinedErrors => {\n          if (!!isMounted.current) {\n            dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n          }\n          return combinedErrors;\n        })\n        .catch(actualException => {\n          if (process.env.NODE_ENV !== 'production') {\n            // Users can throw during validate, however they have no way of handling their error on touch / blur. In low priority, we need to handle it\n            console.warn(\n              `Warning: An unhandled error was caught during low priority validation in <Formik validate />`,\n              actualException\n            );\n          }\n        });\n      });\n    }\n  );\n\n  // Run all validations methods and update state accordingly\n  const validateFormWithHighPriority = useEventCallback(\n    (values: Values = state.values) => {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runAllValidations(values).then(combinedErrors => {\n        if (!!isMounted.current) {\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          if (!isEqual(state.errors, combinedErrors)) {\n            dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n          }\n        }\n        return combinedErrors;\n      });\n    }\n  );\n\n  React.useEffect(() => {\n    if (validateOnMount && isMounted.current === true) {\n      validateFormWithLowPriority(props.initialValues);\n    }\n  }, [props.initialValues, validateOnMount, validateFormWithLowPriority]);\n\n  const resetForm = React.useCallback(\n    (nextState?: Partial<FormikState<Values>>) => {\n      const values =\n        nextState && nextState.values\n          ? nextState.values\n          : initialValues.current;\n      const errors =\n        nextState && nextState.errors\n          ? nextState.errors\n          : initialErrors.current\n          ? initialErrors.current\n          : props.initialErrors || {};\n      const touched =\n        nextState && nextState.touched\n          ? nextState.touched\n          : initialTouched.current\n          ? initialTouched.current\n          : props.initialTouched || {};\n      const status =\n        nextState && nextState.status\n          ? nextState.status\n          : initialStatus.current\n          ? initialStatus.current\n          : props.initialStatus;\n      initialValues.current = values;\n      initialErrors.current = errors;\n      initialTouched.current = touched;\n      initialStatus.current = status;\n\n      dispatch({\n        type: 'RESET_FORM',\n        payload: {\n          isSubmitting: !!nextState && !!nextState.isSubmitting,\n          errors,\n          touched,\n          status,\n          values,\n          isValidating: !!nextState && !!nextState.isValidating,\n          submitCount:\n            !!nextState &&\n            !!nextState.submitCount &&\n            typeof nextState.submitCount === 'number'\n              ? nextState.submitCount\n              : 0,\n        },\n      });\n    },\n    [props.initialErrors, props.initialStatus, props.initialTouched]\n  );\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialValues.current, props.initialValues)\n    ) {\n      initialValues.current = props.initialValues;\n      resetForm();\n    }\n  }, [enableReinitialize, props.initialValues, resetForm]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialErrors.current, props.initialErrors)\n    ) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors,\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialTouched.current, props.initialTouched)\n    ) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched,\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialStatus.current, props.initialStatus)\n    ) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus,\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n\n  const validateField = useEventCallback((name: string) => {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n\n    if (isFunction(fieldRegistry.current[name].validate)) {\n      const value = getIn(state.values, name);\n      const maybePromise = fieldRegistry.current[name].validate(value);\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({ type: 'SET_ISVALIDATING', payload: true });\n        return maybePromise\n          .then((x: any) => x)\n          .then((error: string) => {\n            dispatch({\n              type: 'SET_FIELD_ERROR',\n              payload: { field: name, value: error },\n            });\n            dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise as string | undefined,\n          },\n        });\n        return Promise.resolve(maybePromise as string | undefined);\n      }\n    } else {\n      return Promise.resolve();\n    }\n  });\n\n  const registerField = React.useCallback((name: string, { validate }: any) => {\n    fieldRegistry.current[name] = {\n      validate,\n    };\n  }, []);\n\n  const unregisterField = React.useCallback((name: string) => {\n    delete fieldRegistry.current[name];\n  }, []);\n\n  const setTouched = useEventCallback(\n    (touched: FormikTouched<Values>, shouldValidate?: boolean) => {\n      dispatch({ type: 'SET_TOUCHED', payload: touched });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithLowPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const setErrors = React.useCallback((errors: FormikErrors<Values>) => {\n    dispatch({ type: 'SET_ERRORS', payload: errors });\n  }, []);\n\n  const setValues = useEventCallback(\n    (values: Values, shouldValidate?: boolean) => {\n      dispatch({ type: 'SET_VALUES', payload: values });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithLowPriority(values)\n        : Promise.resolve();\n    }\n  );\n\n  const setFieldError = React.useCallback(\n    (field: string, value: string | undefined) => {\n      dispatch({\n        type: 'SET_FIELD_ERROR',\n        payload: { field, value },\n      });\n    },\n    []\n  );\n\n  const setFieldValue = useEventCallback(\n    (field: string, value: any, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_VALUE',\n        payload: {\n          field,\n          value,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithLowPriority(setIn(state.values, field, value))\n        : Promise.resolve();\n    }\n  );\n\n  const executeChange = React.useCallback(\n    (eventOrTextValue: string | React.ChangeEvent<any>, maybePath?: string) => {\n      // By default, assume that the first argument is a string. This allows us to use\n      // handleChange with React Native and React Native Web's onChangeText prop which\n      // provides just the value of the input.\n      let field = maybePath;\n      let val = eventOrTextValue;\n      let parsed;\n      // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n      // so we handle like we would a normal HTML change event.\n      if (!isString(eventOrTextValue)) {\n        // If we can, persist the event\n        // @see https://reactjs.org/docs/events.html#event-pooling\n        if ((eventOrTextValue as React.ChangeEvent<any>).persist) {\n          (eventOrTextValue as React.ChangeEvent<any>).persist();\n        }\n        const target = eventOrTextValue.target\n          ? (eventOrTextValue as React.ChangeEvent<any>).target\n          : (eventOrTextValue as React.ChangeEvent<any>).currentTarget;\n\n        const {\n          type,\n          name,\n          id,\n          value,\n          checked,\n          outerHTML,\n          options,\n          multiple,\n        } = target;\n\n        field = maybePath ? maybePath : name ? name : id;\n        if (!field && __DEV__) {\n          warnAboutMissingIdentifier({\n            htmlContent: outerHTML,\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n            handlerName: 'handleChange',\n          });\n        }\n        val = /number|range/.test(type)\n          ? ((parsed = parseFloat(value)), isNaN(parsed) ? '' : parsed)\n          : /checkbox/.test(type) // checkboxes\n          ? getValueForCheckbox(getIn(state.values, field!), checked, value)\n          : !!multiple // <select multiple>\n          ? getSelectedValues(options)\n          : value;\n      }\n\n      if (field) {\n        // Set form fields by name\n        setFieldValue(field, val);\n      }\n    },\n    [setFieldValue, state.values]\n  );\n\n  const handleChange = React.useCallback(\n    (\n      eventOrPath: string | React.ChangeEvent<any>\n    ): void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void) => {\n      if (isString(eventOrPath)) {\n        return event => executeChange(event, eventOrPath);\n      } else {\n        executeChange(eventOrPath);\n      }\n    },\n    [executeChange]\n  );\n\n  const setFieldTouched = useEventCallback(\n    (field: string, touched: boolean = true, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_TOUCHED',\n        payload: {\n          field,\n          value: touched,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithLowPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const executeBlur = React.useCallback(\n    (e: any, path?: string) => {\n      if (e.persist) {\n        e.persist();\n      }\n      const { name, id, outerHTML } = e.target;\n      const field = path ? path : name ? name : id;\n\n      if (!field && __DEV__) {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handleblur-e-any--void',\n          handlerName: 'handleBlur',\n        });\n      }\n\n      setFieldTouched(field, true);\n    },\n    [setFieldTouched]\n  );\n\n  const handleBlur = React.useCallback(\n    (eventOrString: any): void | ((e: any) => void) => {\n      if (isString(eventOrString)) {\n        return event => executeBlur(event, eventOrString);\n      } else {\n        executeBlur(eventOrString);\n      }\n    },\n    [executeBlur]\n  );\n\n  const setFormikState = React.useCallback(\n    (\n      stateOrCb:\n        | FormikState<Values>\n        | ((state: FormikState<Values>) => FormikState<Values>)\n    ): void => {\n      if (isFunction(stateOrCb)) {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb });\n      } else {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: () => stateOrCb });\n      }\n    },\n    []\n  );\n\n  const setStatus = React.useCallback((status: any) => {\n    dispatch({ type: 'SET_STATUS', payload: status });\n  }, []);\n\n  const setSubmitting = React.useCallback((isSubmitting: boolean) => {\n    dispatch({ type: 'SET_ISSUBMITTING', payload: isSubmitting });\n  }, []);\n\n  const imperativeMethods = {\n    resetForm,\n\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    setErrors,\n    setFieldError,\n    setFieldTouched,\n    setFieldValue,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    setFormikState,\n  };\n\n  const executeSubmit = useEventCallback(() => {\n    return onSubmit(state.values, imperativeMethods);\n  });\n\n  const submitForm = useEventCallback(() => {\n    dispatch({ type: 'SUBMIT_ATTEMPT' });\n    return validateFormWithHighPriority().then(\n      (combinedErrors: FormikErrors<Values>) => {\n        // In case an error was thrown and passed to the resolved Promise,\n        // `combinedErrors` can be an instance of an Error. We need to check\n        // that and abort the submit.\n        // If we don't do that, calling `Object.keys(new Error())` yields an\n        // empty array, which causes the validation to pass and the form\n        // to be submitted.\n\n        const isInstanceOfError = combinedErrors instanceof Error;\n        const isActuallyValid =\n          !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n        if (isActuallyValid) {\n          // Proceed with submit...\n          //\n          // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n          // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n          // This would be fine in simple cases, but make it impossible to disable submit\n          // buttons where people use callbacks or promises as side effects (which is basically\n          // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n          //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n          // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n          // cleanup of isSubmitting on behalf of the consumer.\n          let promiseOrUndefined;\n          try {\n            promiseOrUndefined = executeSubmit();\n            // Bail if it's sync, consumer is responsible for cleaning up\n            // via setSubmitting(false)\n            if (promiseOrUndefined === undefined) {\n              return;\n            }\n          } catch (error) {\n            throw error;\n          }\n\n          return Promise.resolve(promiseOrUndefined)\n            .then(() => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_SUCCESS' });\n              }\n            })\n            .catch(_errors => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_FAILURE' });\n                // This is a legit error rejected by the onSubmit fn\n                // so we don't want to break the promise chain\n                throw _errors;\n              }\n            });\n        } else if (!!isMounted.current) {\n          // ^^^ Make sure Formik is still mounted before updating state\n          dispatch({ type: 'SUBMIT_FAILURE' });\n          // throw combinedErrors;\n          if (isInstanceOfError) {\n            throw combinedErrors;\n          }\n        }\n        return;\n      }\n    );\n  });\n\n  const handleSubmit = useEventCallback(\n    (e?: React.FormEvent<HTMLFormElement>) => {\n      if (e && e.preventDefault && isFunction(e.preventDefault)) {\n        e.preventDefault();\n      }\n\n      if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n        e.stopPropagation();\n      }\n\n      // Warn if form submission is triggered by a <button> without a\n      // specified `type` attribute during development. This mitigates\n      // a common gotcha in forms with both reset and submit buttons,\n      // where the dev forgets to add type=\"button\" to the reset button.\n      if (__DEV__ && typeof document !== 'undefined') {\n        // Safely get the active element (works with IE)\n        const activeElement = getActiveElement();\n        if (\n          activeElement !== null &&\n          activeElement instanceof HTMLButtonElement\n        ) {\n          invariant(\n            activeElement.attributes &&\n              activeElement.attributes.getNamedItem('type'),\n            'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\n          );\n        }\n      }\n\n      submitForm().catch(reason => {\n        console.warn(\n          `Warning: An unhandled error was caught from submitForm()`,\n          reason\n        );\n      });\n    }\n  );\n  const handleReset = useEventCallback(e => {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    if (props.onReset) {\n      const maybePromisedOnReset = (props.onReset as any)(\n        state.values,\n        imperativeMethods\n      );\n\n      if (isPromise(maybePromisedOnReset)) {\n        (maybePromisedOnReset as Promise<any>).then(resetForm);\n      } else {\n        resetForm();\n      }\n    } else {\n      resetForm();\n    }\n  });\n\n  const getFieldMeta = React.useCallback(\n    (name: string): FieldMetaProps<any> => {\n      return {\n        value: getIn(state.values, name),\n        error: getIn(state.errors, name),\n        touched: !!getIn(state.touched, name),\n        initialValue: getIn(initialValues.current, name),\n        initialTouched: !!getIn(initialTouched.current, name),\n        initialError: getIn(initialErrors.current, name),\n      };\n    },\n    [state.errors, state.touched, state.values]\n  );\n\n  const getFieldHelpers = React.useCallback(\n    (name: string): FieldHelperProps => {\n      return {\n        setValue: (value: any) => setFieldValue(name, value),\n        setTouched: (value: boolean) => setFieldTouched(name, value),\n        setError: (value: any) => setFieldError(name, value),\n      };\n    },\n    [setFieldValue, setFieldTouched, setFieldError]\n  );\n\n  const getFieldProps = React.useCallback(\n    (nameOrOptions): FieldInputProps<any> => {\n      const isAnObject = isObject(nameOrOptions);\n      const name = isAnObject ? nameOrOptions.name : nameOrOptions;\n      const valueState = getIn(state.values, name);\n\n      const field: FieldInputProps<any> = {\n        name,\n        value: valueState,\n        onChange: handleChange,\n        onBlur: handleBlur,\n      };\n      if (isAnObject) {\n        const {\n          type,\n          value: valueProp, // value is special for checkboxes\n          as: is,\n          multiple,\n        } = nameOrOptions;\n\n        if (type === 'checkbox') {\n          if (valueProp === undefined) {\n            field.checked = !!valueState;\n          } else {\n            field.checked = !!(\n              Array.isArray(valueState) && ~valueState.indexOf(valueProp)\n            );\n            field.value = valueProp;\n          }\n        } else if (type === 'radio') {\n          field.checked = valueState === valueProp;\n          field.value = valueProp;\n        } else if (is === 'select' && multiple) {\n          field.value = field.value || [];\n          field.multiple = true;\n        }\n      }\n      return field;\n    },\n    [handleBlur, handleChange, state.values]\n  );\n\n  const dirty = React.useMemo(\n    () => !isEqual(initialValues.current, state.values),\n    [initialValues.current, state.values]\n  );\n\n  const isValid = React.useMemo(\n    () =>\n      typeof isInitialValid !== 'undefined'\n        ? dirty\n          ? state.errors && Object.keys(state.errors).length === 0\n          : isInitialValid !== false && isFunction(isInitialValid)\n          ? (isInitialValid as (props: FormikConfig<Values>) => boolean)(props)\n          : (isInitialValid as boolean)\n        : state.errors && Object.keys(state.errors).length === 0,\n    [isInitialValid, dirty, state.errors, props]\n  );\n\n  const ctx = {\n    ...state,\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setFormikState,\n    setFieldTouched,\n    setFieldValue,\n    setFieldError,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    isValid,\n    dirty,\n    unregisterField,\n    registerField,\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    validateOnBlur,\n    validateOnChange,\n    validateOnMount,\n  };\n\n  return ctx;\n}\n\nexport function Formik<\n  Values extends FormikValues = FormikValues,\n  ExtraProps = {}\n>(props: FormikConfig<Values> & ExtraProps) {\n  const formikbag = useFormik<Values>(props);\n  const { component, children, render } = props;\n  React.useEffect(() => {\n    if (__DEV__) {\n      invariant(\n        !props.render,\n        `<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>`\n      );\n    }\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <FormikProvider value={formikbag}>\n      {component\n        ? React.createElement(component as any, formikbag)\n        : render\n        ? render(formikbag)\n        : children // children come last, always called\n        ? isFunction(children)\n          ? (children as (bag: FormikProps<Values>) => React.ReactNode)(\n              formikbag as FormikProps<Values>\n            )\n          : !isEmptyChildren(children)\n          ? React.Children.only(children)\n          : null\n        : null}\n    </FormikProvider>\n  );\n}\n\nfunction warnAboutMissingIdentifier({\n  htmlContent,\n  documentationAnchorLink,\n  handlerName,\n}: {\n  htmlContent: string;\n  documentationAnchorLink: string;\n  handlerName: string;\n}) {\n  console.warn(\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\n    ${htmlContent}\n    Formik cannot determine which value to update. For more info see https://github.com/jaredpalmer/formik#${documentationAnchorLink}\n  `\n  );\n}\n\n/**\n * Transform Yup ValidationError to a more usable object\n */\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\n  let errors: FormikErrors<Values> = {};\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n    for (let err of yupError.inner) {\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate a yup schema.\n */\nexport function validateYupSchema<T extends FormikValues>(\n  values: T,\n  schema: any,\n  sync: boolean = false,\n  context: any = {}\n): Promise<Partial<T>> {\n  const validateData: FormikValues = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\n    abortEarly: false,\n    context: context,\n  });\n}\n\n/**\n * Recursively prepare values.\n */\nexport function prepareDataForValidation<T extends FormikValues>(\n  values: T\n): FormikValues {\n  let data: FormikValues = {};\n  for (let k in values) {\n    if (values.hasOwnProperty(k)) {\n      const key = String(k);\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map((value: any) => {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n  return data;\n}\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/KyleAMathews/deepmerge#combine-array\n */\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\n  const destination = target.slice();\n\n  source.forEach(function(e: any, i: number) {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\n        : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n\n/** Return multi select values based on an array of options */\nfunction getSelectedValues(options: any[]) {\n  return Array.from(options)\n    .filter(el => el.selected)\n    .map(el => el.value);\n}\n\n/** Return the next value for a checkbox */\nfunction getValueForCheckbox(\n  currentValue: string | any[],\n  checked: boolean,\n  valueProp: any\n) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  }\n\n  // If the currentValue was not a boolean we want to return an array\n  let currentArrayOfValues = []\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (valueProp == 'true' || valueProp == 'false') {\n      return !!checked;\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue\n  }\n\n  const index = currentValue.indexOf(valueProp);\n  const isValueInArray = index >= 0;\n\n  // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  }\n\n  // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n  if (!isValueInArray) {\n    return currentArrayOfValues\n  }\n\n  // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n  return currentArrayOfValues.slice(0, index).concat(currentArrayOfValues.slice(index + 1));\n}\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? React.useLayoutEffect\n    : React.useEffect;\n\nfunction useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  const ref: any = React.useRef(fn);\n\n  // we copy a ref to the callback scoped to the current state/props on each render\n  useIsomorphicLayoutEffect(() => {\n    ref.current = fn;\n  });\n\n  return React.useCallback(\n    (...args: any[]) => ref.current.apply(void 0, args),\n    []\n  ) as T;\n}\n","import * as React from 'react';\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FieldValidator,\n} from './types';\nimport { useFormikContext } from './FormikContext';\nimport { isFunction, isEmptyChildren, isObject } from './utils';\nimport invariant from 'tiny-warning';\n\nexport interface FieldProps<V = any, FormValues = any> {\n  field: FieldInputProps<V>;\n  form: FormikProps<FormValues>; // if ppl want to restrict this for a given form, let them.\n  meta: FieldMetaProps<V>;\n}\n\nexport interface FieldConfig<V = any> {\n  /**\n   * Field component to render. Can either be a string like 'select' or a component.\n   */\n  component?:\n    | keyof JSX.IntrinsicElements\n    | React.ComponentType<FieldProps<V>>\n    | React.ComponentType;\n\n  /**\n   * Component to render. Can either be a string e.g. 'select', 'input', or 'textarea', or a component.\n   */\n  as?:\n    | React.ComponentType<FieldProps<V>['field']>\n    | keyof JSX.IntrinsicElements\n    | React.ComponentType;\n\n  /**\n   * Render prop (works like React router's <Route render={props =>} />)\n   * @deprecated\n   */\n  render?: (props: FieldProps<V>) => React.ReactNode;\n\n  /**\n   * Children render function <Field name>{props => ...}</Field>)\n   */\n  children?: ((props: FieldProps<V>) => React.ReactNode) | React.ReactNode;\n\n  /**\n   * Validate a single field value independently\n   */\n  validate?: FieldValidator;\n\n  /**\n   * Field name\n   */\n  name: string;\n\n  /** HTML input type */\n  type?: string;\n\n  /** Field value */\n  value?: any;\n\n  /** Inner ref */\n  innerRef?: (instance: any) => void;\n}\n\nexport type FieldAttributes<T> = GenericFieldHTMLAttributes &\n  FieldConfig<T> &\n  T & { name: string };\n\nexport type FieldHookConfig<T> = GenericFieldHTMLAttributes & FieldConfig<T>;\n\nexport function useField<Val = any>(\n  propsOrFieldName: string | FieldHookConfig<Val>\n): [FieldInputProps<Val>, FieldMetaProps<Val>, FieldHelperProps] {\n  const formik = useFormikContext();\n  const {\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    registerField,\n    unregisterField,\n  } = formik;\n\n  const isAnObject = isObject(propsOrFieldName);\n\n  // Normalize propsOrFieldName to FieldHookConfig<Val>\n  const props: FieldHookConfig<Val> = isAnObject\n    ? (propsOrFieldName as FieldHookConfig<Val>)\n    : { name: propsOrFieldName as string };\n\n  const { name: fieldName, validate: validateFn } = props;\n\n  React.useEffect(() => {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn,\n      });\n    }\n    return () => {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (__DEV__) {\n    invariant(\n      formik,\n      'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component'\n    );\n  }\n\n  invariant(\n    fieldName,\n    'Invalid field name. Either pass `useField` a string or an object containing a `name` key.'\n  );\n\n  return [getFieldProps(props), getFieldMeta(fieldName), getFieldHelpers(fieldName)];\n}\n\nexport function Field({\n  validate,\n  name,\n  render,\n  children,\n  as: is, // `as` is reserved in typescript lol\n  component,\n  ...props\n}: FieldAttributes<any>) {\n  const {\n    validate: _validate,\n    validationSchema: _validationSchema,\n\n    ...formik\n  } = useFormikContext();\n\n  React.useEffect(() => {\n    if (__DEV__) {\n      invariant(\n        !render,\n        `<Field render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Field name=\"${name}\" render={({field, form}) => ...} /> with <Field name=\"${name}\">{({field, form, meta}) => ...}</Field>`\n      );\n\n      invariant(\n        !(is && children && isFunction(children)),\n        'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.'\n      );\n\n      invariant(\n        !(component && children && isFunction(children)),\n        'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.'\n      );\n\n      invariant(\n        !(render && children && !isEmptyChildren(children)),\n        'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored'\n      );\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // Register field and field-level validation with parent <Formik>\n  const { registerField, unregisterField } = formik;\n  React.useEffect(() => {\n    registerField(name, {\n      validate: validate,\n    });\n    return () => {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  const field = formik.getFieldProps({ name, ...props });\n  const meta = formik.getFieldMeta(name);\n  const legacyBag = { field, form: formik };\n\n  if (render) {\n    return render({ ...legacyBag, meta });\n  }\n\n  if (isFunction(children)) {\n    return children({ ...legacyBag, meta });\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        component,\n        { ref: innerRef, ...field, ...rest },\n        children\n      );\n    }\n    // We don't pass `meta` for backwards compat\n    return React.createElement(\n      component,\n      { field, form: formik, ...props },\n      children\n    );\n  }\n\n  // default to input here so we can check for both `as` and `children` above\n  const asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    const { innerRef, ...rest } = props;\n    return React.createElement(\n      asElement,\n      { ref: innerRef, ...field, ...rest },\n      children\n    );\n  }\n\n  return React.createElement(asElement, { ...field, ...props }, children);\n}\n","import * as React from 'react';\nimport { useFormikContext } from './FormikContext';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\ntype FormProps = React.ComponentPropsWithoutRef<'form'>;\n\n// @todo tests\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props: FormikFormProps, ref) => {\n    // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n    // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n    const { action, ...rest } = props;\n    const _action = action || '#';\n    const { handleReset, handleSubmit } = useFormikContext();\n    return (\n      <form\n        onSubmit={handleSubmit}\n        ref={ref}\n        onReset={handleReset}\n        action={_action}\n        {...rest}\n      />\n    );\n  }\n);\n\nForm.displayName = 'Form';\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { Formik } from './Formik';\nimport {\n  FormikHelpers,\n  FormikProps,\n  FormikSharedConfig,\n  FormikValues,\n  FormikTouched,\n  FormikErrors,\n} from './types';\nimport { isFunction } from './utils';\n\n/**\n * State, handlers, and helpers injected as props into the wrapped form component.\n * Used with withFormik()\n *\n * @deprecated  Use `OuterProps & FormikProps<Values>` instead.\n */\nexport type InjectedFormikProps<Props, Values> = Props & FormikProps<Values>;\n\n/**\n * Formik actions + { props }\n */\nexport type FormikBag<P, V> = { props: P } & FormikHelpers<V>;\n\n/**\n * withFormik() configuration options. Backwards compatible.\n */\nexport interface WithFormikConfig<\n  Props,\n  Values extends FormikValues = FormikValues,\n  DeprecatedPayload = Values\n> extends FormikSharedConfig<Props> {\n  /**\n   * Set the display name of the component. Useful for React DevTools.\n   */\n  displayName?: string;\n\n  /**\n   * Submission handler\n   */\n  handleSubmit: (values: Values, formikBag: FormikBag<Props, Values>) => void;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToValues?: (props: Props) => Values;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToStatus?: (props: Props) => any;\n\n  /**\n   * Map props to the form touched state\n   */\n  mapPropsToTouched?: (props: Props) => FormikTouched<Values>;\n\n  /**\n   * Map props to the form touched state\n   */\n  mapPropsToErrors?: (props: Props) => FormikErrors<Values>;\n\n  /**\n   * @deprecated in 0.9.0 (but needed to break TS types)\n   */\n  mapValuesToPayload?: (values: Values) => DeprecatedPayload;\n\n  /**\n   * A Yup Schema or a function that returns a Yup schema\n   */\n  validationSchema?: any | ((props: Props) => any);\n\n  /**\n   * Validation function. Must return an error object or promise that\n   * throws an error object where that object keys map to corresponding value.\n   */\n  validate?: (values: Values, props: Props) => void | object | Promise<any>;\n}\n\nexport type CompositeComponent<P> =\n  | React.ComponentClass<P>\n  | React.StatelessComponent<P>;\n\nexport interface ComponentDecorator<TOwnProps, TMergedProps> {\n  (component: CompositeComponent<TMergedProps>): React.ComponentType<TOwnProps>;\n}\n\nexport interface InferableComponentDecorator<TOwnProps> {\n  <T extends CompositeComponent<TOwnProps>>(component: T): T;\n}\n\n/**\n * A public higher-order component to access the imperative API\n */\nexport function withFormik<\n  OuterProps extends object,\n  Values extends FormikValues,\n  Payload = Values\n>({\n  mapPropsToValues = (vanillaProps: OuterProps): Values => {\n    let val: Values = {} as Values;\n    for (let k in vanillaProps) {\n      if (\n        vanillaProps.hasOwnProperty(k) &&\n        typeof vanillaProps[k] !== 'function'\n      ) {\n        // @todo TypeScript fix\n        (val as any)[k] = vanillaProps[k];\n      }\n    }\n    return val as Values;\n  },\n  ...config\n}: WithFormikConfig<OuterProps, Values, Payload>): ComponentDecorator<\n  OuterProps,\n  OuterProps & FormikProps<Values>\n> {\n  return function createFormik(\n    Component: CompositeComponent<OuterProps & FormikProps<Values>>\n  ): React.ComponentClass<OuterProps> {\n    const componentDisplayName =\n      Component.displayName ||\n      Component.name ||\n      (Component.constructor && Component.constructor.name) ||\n      'Component';\n    /**\n     * We need to use closures here for to provide the wrapped component's props to\n     * the respective withFormik config methods.\n     */\n    class C extends React.Component<OuterProps, {}> {\n      static displayName = `WithFormik(${componentDisplayName})`;\n\n      validate = (values: Values): void | object | Promise<any> => {\n        return config.validate!(values, this.props);\n      };\n\n      validationSchema = () => {\n        return isFunction(config.validationSchema)\n          ? config.validationSchema!(this.props)\n          : config.validationSchema;\n      };\n\n      handleSubmit = (values: Values, actions: FormikHelpers<Values>) => {\n        return config.handleSubmit(values, {\n          ...actions,\n          props: this.props,\n        });\n      };\n\n      /**\n       * Just avoiding a render callback for perf here\n       */\n      renderFormComponent = (formikProps: FormikProps<Values>) => {\n        return <Component {...this.props} {...formikProps} />;\n      };\n\n      render() {\n        const { children, ...props } = this.props as any;\n        return (\n          <Formik\n            {...props}\n            {...config}\n            validate={config.validate && this.validate}\n            validationSchema={config.validationSchema && this.validationSchema}\n            initialValues={mapPropsToValues(this.props)}\n            initialStatus={\n              config.mapPropsToStatus && config.mapPropsToStatus(this.props)\n            }\n            initialErrors={\n              config.mapPropsToErrors && config.mapPropsToErrors(this.props)\n            }\n            initialTouched={\n              config.mapPropsToTouched && config.mapPropsToTouched(this.props)\n            }\n            onSubmit={this.handleSubmit as any}\n            children={this.renderFormComponent}\n          />\n        );\n      }\n    }\n\n    return hoistNonReactStatics(\n      C,\n      Component as React.ComponentClass<OuterProps & FormikProps<Values>> // cast type to ComponentClass (even if SFC)\n    ) as React.ComponentClass<OuterProps>;\n  };\n}\n","import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { FormikContextType } from './types';\nimport { FormikConsumer } from './FormikContext';\nimport invariant from 'tiny-warning';\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContextType<Values> }>\n) {\n  const C: React.SFC<OuterProps> = (props: OuterProps) => (\n    <FormikConsumer>\n      {formik => {\n        invariant(\n          !!formik,\n          `Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: ${Comp.name}`\n        );\n        return <Comp {...props} formik={formik} />;\n      }}\n    </FormikConsumer>\n  );\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.SFC<OuterProps> & {\n    WrappedComponent: React.ReactNode;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics(\n    C,\n    Comp as React.ComponentClass<\n      OuterProps & { formik: FormikContextType<Values> }\n    > // cast type to ComponentClass (even if SFC)\n  ) as React.ComponentType<OuterProps>;\n}\n","import * as React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { connect } from './connect';\nimport {\n  FormikContextType,\n  FormikState,\n  SharedRenderProps,\n  FormikProps,\n} from './types';\nimport {\n  getIn,\n  isEmptyChildren,\n  isFunction,\n  setIn,\n  isEmptyArray,\n} from './utils';\nimport isEqual from 'react-fast-compare';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers {\n  /** Imperatively add a value to the end of an array */\n  push: (obj: any) => void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush: (obj: any) => () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert: (index: number, value: any) => void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert: (index: number, value: any) => () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace: (index: number, value: any) => void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace: (index: number, value: any) => () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift: (value: any) => number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift: (value: any) => () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<T>(index: number): T | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<T>(): T | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = (array: any[], from: number, to: number) => {\n  const copy = copyArrayLike(array);\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = (\n  arrayLike: ArrayLike<any>,\n  indexA: number,\n  indexB: number\n) => {\n  const copy = copyArrayLike(arrayLike);\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nconst copyArrayLike = (arrayLike: ArrayLike<any>) => {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [...arrayLike];\n  } else {\n    const maxIndex = Object.keys(arrayLike)\n      .map(key => parseInt(key))\n      .reduce((max, el) => (el > max ? el : max), 0);\n    return Array.from({ ...arrayLike, length: maxIndex + 1 });\n  }\n};\n\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContextType<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContextType<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  componentDidUpdate(\n    prevProps: FieldArrayConfig & { formik: FormikContextType<Values> }\n  ) {\n    if (\n      !isEqual(\n        getIn(prevProps.formik.values, prevProps.name),\n        getIn(this.props.formik.values, this.props.name)\n      ) &&\n      this.props.formik.validateOnChange\n    ) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n\n      formik: { setFormikState },\n    } = this.props;\n    setFormikState((prevState: FormikState<any>) => {\n      let updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n      let updateTouched =\n        typeof alterTouched === 'function' ? alterTouched : fn;\n\n      // values fn should be executed before updateErrors and updateTouched,\n      // otherwise it causes an error with unshift.\n      let values = setIn(\n        prevState.values,\n        name,\n        fn(getIn(prevState.values, name))\n      );\n\n      let fieldError = alterErrors\n        ? updateErrors(getIn(prevState.errors, name))\n        : undefined;\n      let fieldTouched = alterTouched\n        ? updateTouched(getIn(prevState.touched, name))\n        : undefined;\n\n      if (isEmptyArray(fieldError)) {\n        fieldError = undefined;\n      }\n      if (isEmptyArray(fieldTouched)) {\n        fieldTouched = undefined;\n      }\n\n      return {\n        ...prevState,\n        values,\n        errors: alterErrors\n          ? setIn(prevState.errors, name, fieldError)\n          : prevState.errors,\n        touched: alterTouched\n          ? setIn(prevState.touched, name, fieldTouched)\n          : prevState.touched,\n      };\n    });\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (arrayLike: ArrayLike<any>) => [\n        ...copyArrayLike(arrayLike),\n        cloneDeep(value),\n      ],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      }\n    );\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? copyArrayLike(array) : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        return copy;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array;\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n      ? (render as any)(props)\n      : children // children come last, always called\n      ? typeof children === 'function'\n        ? (children as any)(props)\n        : !isEmptyChildren(children)\n        ? React.Children.only(children)\n        : null\n      : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport { getIn, isFunction } from './utils';\nimport { connect } from './connect';\n\nexport interface ErrorMessageProps {\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: (errorMessage: string) => React.ReactNode;\n  render?: (errorMessage: string) => React.ReactNode;\n}\n\nclass ErrorMessageImpl extends React.Component<\n  ErrorMessageProps & { formik: FormikContextType<any> }\n> {\n  shouldComponentUpdate(\n    props: ErrorMessageProps & { formik: FormikContextType<any> }\n  ) {\n    if (\n      getIn(this.props.formik.errors, this.props.name) !==\n        getIn(props.formik.errors, this.props.name) ||\n      getIn(this.props.formik.touched, this.props.name) !==\n        getIn(props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let { component, formik, render, children, name, ...rest } = this.props;\n\n    const touch = getIn(formik.touched, name);\n    const error = getIn(formik.errors, name);\n\n    return !!touch && !!error\n      ? render\n        ? isFunction(render)\n          ? render(error)\n          : null\n        : children\n        ? isFunction(children)\n          ? children(error)\n          : null\n        : component\n        ? React.createElement(component, rest as any, error)\n        : error\n      : null;\n  }\n}\n\nexport const ErrorMessage = connect<\n  ErrorMessageProps,\n  ErrorMessageProps & { formik: FormikContextType<any> }\n>(ErrorMessageImpl);\n","import * as React from 'react';\n\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FormikContextType,\n  FieldMetaProps,\n  FieldInputProps,\n} from './types';\nimport invariant from 'tiny-warning';\nimport { getIn, isEmptyChildren, isFunction } from './utils';\nimport { FieldConfig } from './Field';\nimport { connect } from './connect';\n\ntype $FixMe = any;\n\nexport interface FastFieldProps<V = any> {\n  field: FieldInputProps<V>;\n  meta: FieldMetaProps<V>;\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n}\n\nexport type FastFieldConfig<T> = FieldConfig & {\n  /** Override FastField's default shouldComponentUpdate */\n  shouldUpdate?: (\n    nextProps: T & GenericFieldHTMLAttributes,\n    props: {}\n  ) => boolean;\n};\n\nexport type FastFieldAttributes<T> = GenericFieldHTMLAttributes &\n  FastFieldConfig<T> &\n  T;\n\ntype FastFieldInnerProps<Values = {}, Props = {}> = FastFieldAttributes<\n  Props\n> & { formik: FormikContextType<Values> };\n\n/**\n * Custom Field component for quickly hooking into Formik\n * context and wiring up forms.\n */\nclass FastFieldInner<Values = {}, Props = {}> extends React.Component<\n  FastFieldInnerProps<Values, Props>,\n  {}\n> {\n  constructor(props: FastFieldInnerProps<Values, Props>) {\n    super(props);\n    const { render, children, component, as: is, name } = props;\n    invariant(\n      !render,\n      `<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={${name}}>{props => ...}</FastField> instead.`\n    );\n    invariant(\n      !(component && render),\n      'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored'\n    );\n\n    invariant(\n      !(is && children && isFunction(children)),\n      'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.'\n    );\n\n    invariant(\n      !(component && children && isFunction(children)),\n      'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.'\n    );\n\n    invariant(\n      !(render && children && !isEmptyChildren(children)),\n      'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored'\n    );\n  }\n\n  shouldComponentUpdate(props: FastFieldInnerProps<Values, Props>) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (\n      props.name !== this.props.name ||\n      getIn(props.formik.values, this.props.name) !==\n        getIn(this.props.formik.values, this.props.name) ||\n      getIn(props.formik.errors, this.props.name) !==\n        getIn(this.props.formik.errors, this.props.name) ||\n      getIn(props.formik.touched, this.props.name) !==\n        getIn(this.props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length ||\n      props.formik.isSubmitting !== this.props.formik.isSubmitting\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate,\n    });\n  }\n\n  componentDidUpdate(prevProps: FastFieldAttributes<Props>) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  }\n\n  render() {\n    const {\n      validate,\n      name,\n      render,\n      as: is,\n      children,\n      component,\n      shouldUpdate,\n      formik,\n      ...props\n    } = this.props as FastFieldInnerProps<Values, Props>;\n\n    const {\n      validate: _validate,\n      validationSchema: _validationSchema,\n      ...restOfFormik\n    } = formik;\n    const field = {\n      value:\n        props.type === 'radio' || props.type === 'checkbox'\n          ? props.value // React uses checked={} for these inputs\n          : getIn(formik.values, name),\n      name,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n    };\n    const meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name),\n    };\n\n    const bag = { field, meta, form: restOfFormik };\n\n    if (render) {\n      return (render as any)(bag);\n    }\n\n    if (isFunction(children)) {\n      return (children as (props: FastFieldProps<any>) => React.ReactNode)(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        const { innerRef, ...rest } = props;\n        return React.createElement(\n          component,\n          { ref: innerRef, ...field, ...(rest as $FixMe) },\n          children\n        );\n      }\n      // We don't pass `meta` for backwards compat\n      return React.createElement(\n        component as React.ComponentClass<$FixMe>,\n        { field, form: formik, ...props },\n        children\n      );\n    }\n\n    // default to input here so we can check for both `as` and `children` above\n    const asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        asElement,\n        { ref: innerRef, ...field, ...(rest as $FixMe) },\n        children\n      );\n    }\n\n    return React.createElement(\n      asElement as React.ComponentClass,\n      { ...field, ...props },\n      children\n    );\n  }\n}\n\nexport const FastField = connect<FastFieldAttributes<any>, any>(FastFieldInner);\n"],"names":["isEmptyArray","value","Array","isArray","length","isFunction","obj","isObject","isInteger","String","Math","floor","Number","isString","Object","prototype","toString","call","isNaN","isEmptyChildren","children","React","count","isPromise","then","isInputEvent","target","getActiveElement","doc","document","undefined","activeElement","body","e","getIn","key","def","p","path","toPath","setIn","res","clone","resVal","i","pathArray","currentPath","currentObj","slice","nextPath","setNestedObjectValues","object","visited","response","WeakMap","keys","k","val","get","set","FormikContext","FormikProvider","Provider","FormikConsumer","Consumer","useFormikContext","formik","invariant","formikReducer","state","msg","type","values","payload","touched","isEqual","errors","status","isSubmitting","isValidating","field","submitCount","emptyErrors","emptyTouched","useFormik","validateOnChange","validateOnBlur","validateOnMount","isInitialValid","enableReinitialize","onSubmit","rest","props","initialValues","initialErrors","initialTouched","initialStatus","isMounted","fieldRegistry","current","dispatch","runValidateHandler","Promise","resolve","reject","maybePromisedErrors","validate","actualException","console","warn","runValidationSchema","validationSchema","schema","promise","validateAt","validateYupSchema","err","name","yupToFormErrors","runSingleFieldLevelValidation","runFieldLevelValidations","fieldKeysWithValidation","filter","f","fieldValidations","map","all","fieldErrorsList","reduce","prev","curr","index","runAllValidations","fieldErrors","schemaErrors","validateErrors","combinedErrors","deepmerge","arrayMerge","validateFormWithLowPriority","useEventCallback","unstable_runWithPriority","LowPriority","validateFormWithHighPriority","resetForm","nextState","validateField","maybePromise","x","error","registerField","unregisterField","setTouched","shouldValidate","willValidate","setErrors","setValues","setFieldError","setFieldValue","executeChange","eventOrTextValue","maybePath","parsed","persist","currentTarget","id","checked","outerHTML","options","multiple","warnAboutMissingIdentifier","htmlContent","documentationAnchorLink","handlerName","test","parseFloat","getValueForCheckbox","getSelectedValues","handleChange","eventOrPath","event","setFieldTouched","executeBlur","handleBlur","eventOrString","setFormikState","stateOrCb","setStatus","setSubmitting","imperativeMethods","validateForm","executeSubmit","submitForm","isInstanceOfError","Error","isActuallyValid","promiseOrUndefined","_errors","handleSubmit","preventDefault","stopPropagation","HTMLButtonElement","attributes","getNamedItem","reason","handleReset","onReset","maybePromisedOnReset","getFieldMeta","initialValue","initialError","getFieldHelpers","setValue","setError","getFieldProps","nameOrOptions","isAnObject","valueState","onChange","onBlur","valueProp","is","as","indexOf","dirty","isValid","ctx","Formik","formikbag","component","render","only","yupError","inner","message","sync","context","validateData","prepareDataForValidation","abortEarly","data","hasOwnProperty","isPlainObject","source","destination","forEach","cloneRequested","shouldClone","isMergeableObject","push","from","el","selected","currentValue","Boolean","currentArrayOfValues","isValueInArray","concat","useIsomorphicLayoutEffect","window","createElement","fn","ref","args","apply","useField","propsOrFieldName","fieldName","validateFn","Field","_validate","_validationSchema","meta","legacyBag","form","innerRef","asElement","Form","action","_action","displayName","withFormik","mapPropsToValues","vanillaProps","config","createFormik","Component","componentDisplayName","constructor","C","actions","formikProps","mapPropsToStatus","mapPropsToErrors","mapPropsToTouched","renderFormComponent","hoistNonReactStatics","connect","Comp","WrappedComponent","move","array","to","copy","copyArrayLike","splice","swap","arrayLike","indexA","indexB","a","insert","replace","maxIndex","parseInt","max","FieldArrayInner","alterTouched","alterErrors","prevState","updateErrors","updateTouched","fieldError","fieldTouched","updateArrayField","cloneDeep","arr","unshift","remove","pop","bind","componentDidUpdate","prevProps","result","tmp","arrayHelpers","handlePush","handlePop","handleSwap","handleMove","handleInsert","handleReplace","handleUnshift","handleRemove","restOfFormik","FieldArray","ErrorMessageImpl","shouldComponentUpdate","touch","ErrorMessage","FastFieldInner","shouldUpdate","componentDidMount","componentWillUnmount","bag","FastField"],"mappings":"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"}